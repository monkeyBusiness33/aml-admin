# Generated by Django 4.0.3 on 2022-04-08 22:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('organisation', '0047_alter_nasdldetails_comment_guidance_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroundService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('is_de_icing', models.BooleanField(default=False, verbose_name='De-icing?')),
                ('is_anti_icing', models.BooleanField(default=False, verbose_name='Anti-icing?')),
                ('is_maintenance', models.BooleanField(default=False, verbose_name='Maintenance?')),
                ('is_cleaning', models.BooleanField(default=False, verbose_name='Cleaning?')),
                ('is_equipment_rental', models.BooleanField(default=False, verbose_name='Equipment Rental?')),
                ('is_catering', models.BooleanField(default=False, verbose_name='Catering?')),
                ('is_transport', models.BooleanField(default=False, verbose_name='Transport?')),
            ],
            options={
                'db_table': 'aviation_ground_services',
            },
        ),
        migrations.CreateModel(
            name='GroundServiceDeIcingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('is_de_icing', models.BooleanField(default=False, verbose_name='De-icing?')),
                ('is_anti_icing', models.BooleanField(default=False, verbose_name='Anti-icing?')),
                ('is_mechanical', models.BooleanField(default=False, verbose_name='Mechanical?')),
                ('is_thermal', models.BooleanField(default=False, verbose_name='Thermal?')),
                ('is_liquid', models.BooleanField(default=False, verbose_name='Liquid?')),
                ('fluid_ratio', models.IntegerField(blank=True, null=True, verbose_name='Fluid Ratio')),
                ('water_ratio', models.IntegerField(blank=True, null=True, verbose_name='Water Ratio')),
                ('colour', models.CharField(max_length=10, verbose_name='Colour')),
                ('holdover_time_minimum', models.TimeField(verbose_name='Holdover Time Min')),
                ('holdover_time_maximum', models.TimeField(verbose_name='Holdover Time Max')),
                ('minimum_rotation_speed_kts', models.IntegerField(blank=True, null=True, verbose_name='Min Rotation Speed KTS')),
            ],
            options={
                'db_table': 'de_anti_icing_types',
            },
        ),
        migrations.CreateModel(
            name='OrganisationServiceProviderLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_fbo', models.BooleanField(default=False, verbose_name='FBO?')),
            ],
            options={
                'db_table': 'organisations_service_providers_locations',
            },
        ),
        migrations.CreateModel(
            name='OrganisationServiceProviderLocationService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisation.organisationserviceproviderlocation', verbose_name='Location')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisation.groundservice', verbose_name='Service')),
            ],
            options={
                'db_table': 'organisations_service_providers_locations_services',
            },
        ),
        migrations.AddField(
            model_name='organisationserviceproviderlocation',
            name='ground_services',
            field=models.ManyToManyField(blank=True, related_name='locations', through='organisation.OrganisationServiceProviderLocationService', to='organisation.groundservice'),
        ),
        migrations.AddField(
            model_name='organisationserviceproviderlocation',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisation.organisation', verbose_name='Organisation'),
        ),
        migrations.AddField(
            model_name='groundservice',
            name='anti_icing_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anti_icing_services', to='organisation.groundservicedeicingtype', verbose_name='Anti-icing Type'),
        ),
        migrations.AddField(
            model_name='groundservice',
            name='de_icing_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='de_icing_services', to='organisation.groundservicedeicingtype', verbose_name='De-icing Type'),
        ),
    ]
