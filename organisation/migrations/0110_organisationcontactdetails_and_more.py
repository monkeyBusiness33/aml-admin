# Generated by Django 4.0.3 on 2023-10-18 12:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0032_alter_customnotification_options_and_more'),
        ('organisation', '0109_alter_operatorpreferredgroundhandler_ground_handler_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrganisationContactDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisation.organisation', verbose_name='Organisation')),
                ('organisations_people', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisation_contact_details', to='organisation.organisationpeople', verbose_name='Person')),
                ('email_address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Email Address')),
                ('phone_number', models.CharField(blank=True, max_length=128, null=True, validators=[django.core.validators.RegexValidator(message='Phone number should start from "+", may contains spaces and brackets', regex='^(\\+?\\0?)(\\s?)+\\d(\\s?\\(?\\d\\)?){6,26}$')], verbose_name='Phone Number')),
                ('phone_number_use_for_whatsapp', models.BooleanField(default=False, verbose_name='Use for WhatsApp?')),
                ('phone_number_use_for_telegram', models.BooleanField(default=False, verbose_name='Use for Telegram?')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('supplier_include_for_fuel_quotes', models.BooleanField(default=False, verbose_name='Include for Supplier Fuel Quotes?')),
                ('supplier_include_for_fuel_orders', models.BooleanField(default=False, verbose_name='Include for Supplier Fuel Orders?')),
                ('supplier_include_for_fuel_pricing_updates', models.BooleanField(default=False, verbose_name='Include for Supplier Fuel Pricing Updates?')),
                ('supplier_include_for_fuel_invoicing', models.BooleanField(default=False, verbose_name='Include for Supplier Fuel Invoicing?')),
                ('supplier_include_for_gh_quotes', models.BooleanField(default=False, verbose_name='Include for Supplier Handling Quotes?')),
                ('supplier_include_for_gh_orders', models.BooleanField(default=False, verbose_name='Include for Supplier Handling Orders?')),
                ('supplier_include_for_gh_invoicing', models.BooleanField(default=False, verbose_name='Include for Supplier Handling Invoicing?')),
                ('supplier_include_for_credit_control', models.BooleanField(default=False, verbose_name='Include for Supplier Credit Control?')),
                ('client_include_for_quotes', models.BooleanField(default=False, verbose_name='Include for Client Quotes?')),
                ('client_include_for_orders', models.BooleanField(default=False, verbose_name='Include for Client Orders?')),
                ('client_include_for_invoicing', models.BooleanField(default=False, verbose_name='Include for Client Invoicing?')),
                ('client_include_for_marketing', models.BooleanField(default=False, verbose_name='Include for Client Marketing?')),
                ('client_include_for_credit_control', models.BooleanField(default=False, verbose_name='Include for Client Credit Control?')),
                ('address_to', models.BooleanField(default=False, verbose_name='Address To?')),
                ('address_cc', models.BooleanField(default=False, verbose_name='Address CC?')),
                ('address_bcc', models.BooleanField(default=False, verbose_name='Address BCC?')),
                ('comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='Comments')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.person', verbose_name='Updated By')),
            ],
            options={
                'db_table': 'organisations_contact_details',
            },
        ),
        migrations.CreateModel(
            name='OrganisationContactDetailsLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisation.organisation', verbose_name='Location')),
                ('organisations_contact_details', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='organisation.organisationcontactdetails', verbose_name='Contact Details')),
            ],
            options={
                'db_table': 'organisations_contact_details_locations',
            },
        ),
        migrations.AddField(
            model_name='organisationcontactdetails',
            name='locations',
            field=models.ManyToManyField(related_name='contact_details_for_location', through='organisation.OrganisationContactDetailsLocation', to='organisation.organisation', verbose_name='Applicable Location(s)'),
        ),
    ]
