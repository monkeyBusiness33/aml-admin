# Generated by Django 4.0.3 on 2022-07-26 17:50

import app.storage_backends
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organisation', '0090_alter_organisationlogomotto_cascade_to_departments'),
        ('user', '0023_user_is_invitation_sent'),
        ('core', '0020_flighttype_geographichflighttype'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChargeBand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=6, verbose_name='Code')),
                ('name', models.CharField(max_length=80, verbose_name='Name')),
                ('reference', models.CharField(max_length=60, verbose_name='Reference')),
            ],
            options={
                'db_table': 'charge_bands',
            },
        ),
        migrations.CreateModel(
            name='ChargeService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'db_table': 'charge_services',
            },
        ),
        migrations.CreateModel(
            name='ChargeServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            options={
                'db_table': 'charge_services_categories',
            },
        ),
        migrations.CreateModel(
            name='ChargeStructureCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=12, verbose_name='Code')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
            ],
            options={
                'db_table': 'charge_structure_qualifiers',
            },
        ),
        migrations.CreateModel(
            name='ChargeStructureProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('icao_noise_chapter_included', models.BooleanField(default=False, verbose_name='ICAO Noice Chapter Included')),
                ('class_specific', models.BooleanField(default=False, verbose_name='Class Specific')),
                ('type_specific', models.BooleanField(default=False, verbose_name='Type Specific')),
                ('custom_calculation_code', models.BooleanField(default=False, verbose_name='Custom Calculation Code')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('is_draft', models.BooleanField(default=False, verbose_name='Is Draft?')),
                ('band_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='charge_structure_properties_band_1', to='pricing.chargeband', verbose_name='Band 1')),
                ('band_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='charge_structure_properties_band_2', to='pricing.chargeband', verbose_name='Band 2')),
                ('structure_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.chargestructurecode', verbose_name='Charge Structure Code')),
            ],
            options={
                'db_table': 'charge_structures_properties',
            },
        ),
        migrations.CreateModel(
            name='ChargeStructureQualifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='Code')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            options={
                'db_table': 'charge_structure_codes',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('short_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Short Name')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.person', verbose_name='Updated By')),
            ],
            options={
                'db_table': 'taxes',
            },
        ),
        migrations.CreateModel(
            name='TaxApplicationMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge_structures_properties', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pricing.chargestructureproperties', verbose_name='Charge Structures Properties')),
                ('fuel_pricing_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.pricingunit', verbose_name='Fuel Pricing Unit')),
            ],
            options={
                'db_table': 'taxes_application_methods',
            },
        ),
        migrations.CreateModel(
            name='TaxSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('file_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='File URL')),
                ('web_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='Web URL')),
                ('tax', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pricing.tax', verbose_name='Tax')),
            ],
            options={
                'db_table': 'taxes_sources',
            },
        ),
        migrations.CreateModel(
            name='TaxRuleException',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applies_to_fuel', models.BooleanField(default=False, verbose_name='Applies to Fuel')),
                ('applies_to_services', models.BooleanField(default=False, verbose_name='Applies to Services')),
                ('band_1_start', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Band 1 Start')),
                ('band_1_end', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Band 1 End')),
                ('band_2_start', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Band 2 Start')),
                ('band_2_end', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Band 2 End')),
                ('tax_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Tax Percentage')),
                ('tax_unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Tax Unit Price')),
                ('valid_from', models.DateField(verbose_name='Valid From')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Valid To')),
                ('valid_ufn', models.BooleanField(default=False, verbose_name='Valid UFN')),
                ('source_file', models.FileField(storage=app.storage_backends.TaxRulesFileStorage(), upload_to='', verbose_name='Source File')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('airport', models.ForeignKey(blank=True, limit_choices_to={'airport_details__isnull': False, 'details__type_id': 8}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_rules_exceptions', to='organisation.organisation', verbose_name='Specific Airport')),
                ('applicable_flight_type', models.ForeignKey(db_column='applicable_flight_type_code', on_delete=django.db.models.deletion.CASCADE, to='core.flighttype', verbose_name='Flight Type')),
                ('band_1_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_rules_exceptions_band_1', to='pricing.chargeband', verbose_name='Band 1 Type')),
                ('band_2_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_rules_exceptions_band_2', to='pricing.chargeband', verbose_name='Band 2 Type')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.country', verbose_name='Country')),
                ('geographic_flight_type', models.ForeignKey(db_column='geographic_flight_type_code', on_delete=django.db.models.deletion.CASCADE, to='core.geographichflighttype', verbose_name='Geographich Flight Type')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisation.organisation', verbose_name='Exception Organisation')),
                ('specific_fuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.fueltype', verbose_name='Specific Fuel')),
                ('specific_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pricing.chargeservice', verbose_name='Specific Service')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.tax', verbose_name='Tax')),
                ('tax_application_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pricing.taxapplicationmethod', verbose_name='Tax Application Method')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.person', verbose_name='Updated By')),
            ],
            options={
                'db_table': 'taxes_rules_exceptions',
            },
        ),
        migrations.CreateModel(
            name='TaxRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applies_to_fuel', models.BooleanField(default=False, verbose_name='Applies to Fuel')),
                ('applies_to_services', models.BooleanField(default=False, verbose_name='Applies to Services')),
                ('band_1_start', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Band 1 Start')),
                ('band_1_end', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Band 1 End')),
                ('band_2_start', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Band 2 Start')),
                ('band_2_end', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Band 2 End')),
                ('tax_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Tax Percentage')),
                ('tax_unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Tax Unit Price')),
                ('valid_from', models.DateField(verbose_name='Valid From')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Valid To')),
                ('valid_ufn', models.BooleanField(default=False, verbose_name='Valid UFN')),
                ('source_file', models.FileField(storage=app.storage_backends.TaxRulesFileStorage(), upload_to='', verbose_name='Source File')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('airport', models.ForeignKey(blank=True, limit_choices_to={'airport_details__isnull': False, 'details__type_id': 8}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_rules', to='organisation.organisation', verbose_name='Specific Airport')),
                ('applicable_flight_type', models.ForeignKey(db_column='applicable_flight_type_code', on_delete=django.db.models.deletion.CASCADE, to='core.flighttype', verbose_name='Flight Type')),
                ('band_1_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_rules_band_1', to='pricing.chargeband', verbose_name='Band 1 Type')),
                ('band_2_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax_rules_band_2', to='pricing.chargeband', verbose_name='Band 2 Type')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.country', verbose_name='Country')),
                ('geographic_flight_type', models.ForeignKey(db_column='geographic_flight_type_code', on_delete=django.db.models.deletion.CASCADE, to='core.geographichflighttype', verbose_name='Geographich Flight Type')),
                ('specific_fuel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.fueltype', verbose_name='Specific Fuel')),
                ('specific_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pricing.chargeservice', verbose_name='Specific Service')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.tax', verbose_name='Tax')),
                ('tax_application_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pricing.taxapplicationmethod', verbose_name='Tax Application Method')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.person', verbose_name='Updated By')),
            ],
            options={
                'db_table': 'taxes_rules',
            },
        ),
        migrations.AddField(
            model_name='chargestructureproperties',
            name='structure_qualifier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pricing.chargestructurequalifier', verbose_name='Charge Structure Qualifier'),
        ),
        migrations.AddField(
            model_name='chargeservice',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pricing.chargeservicecategory', verbose_name='Category'),
        ),
    ]
