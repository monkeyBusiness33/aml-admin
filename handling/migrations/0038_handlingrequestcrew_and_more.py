# Generated by Django 4.0.3 on 2022-08-02 18:41

from django.db import migrations, models
import django.db.models.deletion
from django.core.serializers import base, python
from django.core.management import call_command


def load_fixture(apps, schema_editor):
    # Save the old _get_model() function
    old_get_model = python._get_model

    # Define new _get_model() function here, which utilizes the apps argument to
    # get the historical version of a model. This piece of code is directly stolen
    # from django.core.serializers.python._get_model, unchanged. However, here it
    # has a different context, specifically, the apps variable.
    def _get_model(model_identifier):
        try:
            return apps.get_model(model_identifier)
        except (LookupError, TypeError):
            raise base.DeserializationError(
                "Invalid model identifier: '%s'" % model_identifier)

    # Replace the _get_model() function on the module, so loaddata can utilize it.
    python._get_model = _get_model

    try:
        # Call loaddata command
        call_command('loaddata', 'handling_request_crew_positions.yaml',
                     app_label='handling')
    finally:
        # Restore old _get_model() function
        python._get_model = old_get_model


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0023_user_is_invitation_sent'),
        ('handling', '0037_handlingrequest_fuel_prist_required'),
    ]

    operations = [
        migrations.CreateModel(
            name='HandlingRequestCrew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary_contact', models.BooleanField(default=False, verbose_name='Primary Mission Contact')),
                ('can_update_mission', models.BooleanField(default=False, verbose_name='Can Update Mission?')),
            ],
            options={
                'db_table': 'handling_requests_crew',
            },
        ),
        migrations.CreateModel(
            name='HandlingRequestCrewMemberPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            options={
                'db_table': 'handling_requests_crew_positions',
            },
        ),
        migrations.AddField(
            model_name='handlingrequest',
            name='crew',
            field=models.ManyToManyField(related_name='missions', through='handling.HandlingRequestCrew', to='user.person', verbose_name='Crew'),
        ),
        migrations.AddField(
            model_name='handlingrequestcrew',
            name='handling_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crew_members', to='handling.handlingrequest', verbose_name='Handling Request'),
        ),
        migrations.AddField(
            model_name='handlingrequestcrew',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.person', verbose_name='Crew Member'),
        ),
        migrations.AddField(
            model_name='handlingrequestcrew',
            name='position',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.RESTRICT, to='handling.handlingrequestcrewmemberposition', verbose_name='Position'),
        ),
        migrations.RunPython(load_fixture),
    ]
