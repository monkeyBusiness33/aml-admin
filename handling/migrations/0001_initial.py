# Generated by Django 3.2.9 on 2022-01-25 17:06

import app.storage_backends
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HandlingRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callsign', models.CharField(max_length=50, verbose_name='Callsign')),
                ('tail_number', models.CharField(max_length=50, verbose_name='Tail Number')),
                ('notify_dao', models.BooleanField(default=False, verbose_name='Notify DAO?')),
                ('fuel_quantity', models.PositiveBigIntegerField(null=True, verbose_name='Fuel Quantity')),
                ('fuel_captains_request', models.BooleanField(default=False, verbose_name="Captain's Request")),
                ('parking_apron', models.CharField(blank=True, max_length=50, null=True, verbose_name='Apron')),
                ('parking_stand', models.CharField(blank=True, max_length=50, null=True, verbose_name='Stand')),
                ('cancelled', models.BooleanField(default=False, verbose_name='Cancelled')),
                ('amended', models.BooleanField(default=False, verbose_name='Amdended')),
                ('legacy_fuel_order_id', models.IntegerField(db_index=True, null=True)),
                ('legacy_fuel_order_status_code', models.IntegerField(db_index=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('is_booking_notifications_sent', models.BooleanField(null=True)),
                ('air_card_number', models.IntegerField(blank=True, null=True, verbose_name='Air Card Number')),
                ('air_card_expiration', models.CharField(max_length=5, null=True, verbose_name='Air Card Expiration')),
                ('air_card_photo', models.FileField(blank=True, null=True, storage=app.storage_backends.AirCardPhotoStorage(), upload_to='')),
            ],
            options={
                'db_table': 'handling_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HandlingRequestAmendment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.CharField(max_length=1000, verbose_name='Amendment')),
                ('tail_number_changed', models.BooleanField(default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'db_table': 'handling_requests_amendments',
            },
        ),
        migrations.CreateModel(
            name='HandlingRequestMovement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('crew', models.PositiveIntegerField(verbose_name='Crew')),
                ('passengers', models.PositiveIntegerField(verbose_name='Passengers')),
                ('comment', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Comments')),
                ('special_requests', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Special Requests')),
            ],
            options={
                'db_table': 'handling_requests_movement',
            },
        ),
        migrations.CreateModel(
            name='HandlingService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_dla', models.BooleanField(db_index=True, default=False, help_text='Once been enabled - all airports settings will be cleared', verbose_name='DLA Service')),
                ('is_dla_visible_arrival', models.BooleanField(db_index=True, default=False, verbose_name='Visible for Arrival')),
                ('is_dla_visible_departure', models.BooleanField(db_index=True, default=False, verbose_name='Visible for Departure')),
                ('is_spf_visible', models.BooleanField(db_index=True, default=False, verbose_name='SPF Form Visible')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('always_included', models.BooleanField(default=False, help_text='This service will be automatically applied to each Fuelling Request or SPF based on options below.', verbose_name='Always Included?')),
            ],
            options={
                'db_table': 'handling_services',
            },
        ),
        migrations.CreateModel(
            name='MovementDirection',
            fields=[
                ('code', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'handling_movement_direction',
            },
        ),
        migrations.CreateModel(
            name='ServiceProvisionForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Comments')),
                ('customer_signature', models.FileField(null=True, storage=app.storage_backends.SPFSignaturesStorage(), upload_to='', verbose_name='Customer Signature')),
                ('spf_document', models.FileField(null=True, storage=app.storage_backends.SPFDocumentsStorage(), upload_to='', verbose_name='SPF Document')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='')),
                ('handling_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='spf', to='handling.handlingrequest')),
            ],
            options={
                'db_table': 'spf_submissions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceProvisionFormServiceTaken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taken', models.BooleanField(verbose_name='Taken')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='handling.handlingservice', verbose_name='Service')),
                ('spf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services_taken', to='handling.serviceprovisionform')),
            ],
            options={
                'db_table': 'spf_service_taken',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HandlingServiceAvailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hs_availability', to='airport.airport', verbose_name='Airport')),
                ('direction', models.ForeignKey(db_column='direction_code', null=True, on_delete=django.db.models.deletion.CASCADE, to='handling.movementdirection', verbose_name='Available On')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hs_availability', to='handling.handlingservice', verbose_name='Service')),
            ],
            options={
                'db_table': 'handling_services_availability',
            },
        ),
        migrations.AddField(
            model_name='handlingservice',
            name='availability',
            field=models.ManyToManyField(blank=True, through='handling.HandlingServiceAvailability', to='airport.Airport'),
        ),
        migrations.AddField(
            model_name='handlingservice',
            name='custom_service_for_request',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='handling.handlingrequest'),
        ),
        migrations.CreateModel(
            name='HandlingRequestServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_confirmed', models.BooleanField(null=True, verbose_name='Booking Confirmed')),
                ('note', models.CharField(blank=True, max_length=500, null=True, verbose_name='Note')),
                ('note_internal', models.CharField(blank=True, max_length=500, null=True, verbose_name='Internal Note')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('movement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hr_services', to='handling.handlingrequestmovement', verbose_name='Movement')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='hr_services', to='handling.handlingservice', verbose_name='Service')),
            ],
            options={
                'db_table': 'handling_requests_services',
            },
        ),
    ]
